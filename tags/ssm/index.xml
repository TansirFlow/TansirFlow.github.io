<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssm on Tansor&#39;s Blog</title>
    <link>https://tansor1.github.io/tags/ssm/</link>
    <description>Recent content in Ssm on Tansor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 07 Mar 2024 22:20:23 +0800</lastBuildDate>
    <atom:link href="https://tansor1.github.io/tags/ssm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MyBatis</title>
      <link>https://tansor1.github.io/post/ssm/mybatis/</link>
      <pubDate>Thu, 07 Mar 2024 22:20:23 +0800</pubDate>
      <guid>https://tansor1.github.io/post/ssm/mybatis/</guid>
      <description>MyBatis mybatis – MyBatis 3 | Getting started&#xA;配置MyBatis 导入Maven坐标&#xA;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.5&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.1.49&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.12&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.7.25&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;ch.qos.logback&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;logback-classic&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;ch.qos.logback&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;logback-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 在resources中添加配置文件logback.xml&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;!-- console表示当前日志信息是可以输出到控制台的--&amp;gt; &amp;lt;appender name=&amp;#34;Console&amp;#34; class=&amp;#34;ch.qos.logback.core.ConsoleAppender&amp;#34;&amp;gt; &amp;lt;encoder&amp;gt; &amp;lt;pattern&amp;gt;[%level] %blue(%d{HH:mm:ss.SSS}) %cyan([%thread]) %boldGreen(%logger{15}) - %msg %n&amp;lt;/pattern&amp;gt; &amp;lt;/encoder&amp;gt; &amp;lt;/appender&amp;gt; &amp;lt;logger name=&amp;#34;com.Carter_x&amp;#34; level=&amp;#34;DEBUG&amp;#34; additivity=&amp;#34;false&amp;#34;&amp;gt; &amp;lt;appender-ref ref=&amp;#34;Console&amp;#34;/&amp;gt; &amp;lt;/logger&amp;gt; &amp;lt;/configuration&amp;gt; 创建文件mybatis-config.xml</description>
    </item>
    <item>
      <title>Spring</title>
      <link>https://tansor1.github.io/post/ssm/spring/</link>
      <pubDate>Thu, 07 Mar 2024 22:20:23 +0800</pubDate>
      <guid>https://tansor1.github.io/post/ssm/spring/</guid>
      <description>spring框架 黑马教学视频链接 https://www.bilibili.com/video/BV1rt4y1u7q5&#xA;BeanFactorty版本的快速入门 导入spring坐标&#xA;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-context&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.3.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 通过测试类获取Bean(IoC) test类&#xA;package com.tansor.test; import com.tansor.service.UserService; import org.springframework.beans.factory.support.DefaultListableBeanFactory; import org.springframework.beans.factory.xml.XmlBeanDefinitionReader; public class BeanFactoryTest { public static void main(String[] args) { //创建工厂对象 DefaultListableBeanFactory beanFactory=new DefaultListableBeanFactory(); //创建读取器 XmlBeanDefinitionReader reader=new XmlBeanDefinitionReader(beanFactory); //读取器配置文件给工厂 reader.loadBeanDefinitions(&amp;#34;beans.xml&amp;#34;); //根据id获取Bean实例对象 UserService userService = (UserService) beanFactory.getBean(&amp;#34;userService&amp;#34;); //获取对象信息 System.out.println(userService); } } beans.xml&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&amp;#34;&amp;gt; &amp;lt;bean id=&amp;#34;userService&amp;#34; class=&amp;#34;com.tansor.service.impl.UserServiceImpl&amp;#34;&amp;gt;&amp;lt;/bean&amp;gt; &amp;lt;!--id为bean识别信息，class为类的路径--&amp;gt; &amp;lt;/beans&amp;gt; Bean的注入(DI注入) 如下，UserService需要一个UserDao对象，故注入&#xA;package com.tansor.service.impl; import com.tansor.dao.UserDao; import com.</description>
    </item>
    <item>
      <title>SpringMVC</title>
      <link>https://tansor1.github.io/post/ssm/springmvc/</link>
      <pubDate>Thu, 07 Mar 2024 22:20:23 +0800</pubDate>
      <guid>https://tansor1.github.io/post/ssm/springmvc/</guid>
      <description>SpringMVC 使用项目创建向导创建一个项目，类型选择Maven，并选择webapp，创建并加载完毕后在main目录下加一个java目录用来存放源代码&#xA;导入Maven坐标&#xA;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.2.10.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; </description>
    </item>
  </channel>
</rss>
